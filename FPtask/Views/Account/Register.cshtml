@model FPtask.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>


    <h4>This is Stock Exchange simulator - therefore you can define startup values of your account. You'll also be able to change later in due course..</h4>
    
    

    <div class="form-group">
        @Html.LabelFor(m => m.MoneyAvailable, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MoneyAvailable, new { @class = "form-control", @Value = "0" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.shares_FP, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.shares_FP, new { @class = "form-control", @Value = "100" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.shares_FPL, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.shares_FPL, new { @class = "form-control", @Value = "100" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.shares_FPC, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.shares_FPC, new { @class = "form-control", @Value = "100" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.shares_PGB, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.shares_PGB, new { @class = "form-control", @Value = "100" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.shares_FPA, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.shares_FPA, new { @class = "form-control", @Value = "100" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.shares_DL24, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.shares_DL24, new { @class = "form-control", @Value = "100" })
        </div>
    </div>
     


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
